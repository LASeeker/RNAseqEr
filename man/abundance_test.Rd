% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abundance_test.R
\name{abundance_test}
\alias{abundance_test}
\title{Differential Abundance testing using Milo}
\usage{
abundance_test(
  seur_obj,
  cluster_col,
  sample_id,
  cols_interest,
  test_factors,
  account_for = FALSE,
  k = 30,
  d = 30,
  reduced_dim = "PCA",
  refined = TRUE,
  prop = 0.2,
  plot_dimred = "UMAP",
  plot_text = 3,
  plot_point = 0.5,
  plot_alpha = 0.1,
  save_dir = getwd(),
  dir_lab = "all_celltypes",
  height = 6,
  width = 8,
  beeswarm_colour = c("red", "blue", "grey")
)
}
\arguments{
\item{seur_obj}{quality controlled and clustered seurat object}

\item{cluster_col}{name of metadata column that should be considered for
clustering. For example "rough_annot" in the cns dataset from the RNAseqEr
library.}

\item{sample_id}{unique sample id which is a metadata column in seur_obj that
contains sample ids such as "uniq_id" in the RNAseqEr cns dataset.}

\item{cols_interest}{metadata columns the user would like to check. Those can be
factors of interest such as disease vs. control or young vs. old and can
should also include sample id and donor id for example. They shouls also include
all columns that are to be used to correct models by being used in account_for.
Examples may be c("uniq_id", "Tissue", "gender", "AgeGroup", "caseNO",
"SequencingPool", "X10XBatch") in the
RNAseqEer cns dataset.}

\item{test_factors}{metadata columns that should be used for differential
abundance. The easiest test is between two groups such as disease and control.
If there are more than 2 levels, a pairwise comparison will be run (therefore,
the selection of factors with many levels is not ideal here.)
An example is c("Tissue", "gender", "AgeGroup") in the RNAseqEer cns dataset.}

\item{account_for}{add factors to statistically correct for in the model if required.
The default is FALSE where no additional factors are acconted for.
If model is to be corrected for factors, they have to be column names in the
seur_obj metadata and appear in the design matrix
(they have to be have to be element of cols_interest but not of test_factors).
They need to be supplied as strings concatenated and ending with a + symbol like this:
"X10XBatch +" or "X10XBatch + SequencingPool +").}

\item{k}{An integer scalar that specifies the number of nearest-neighbours to consider for the graph building.}

\item{d}{he number of dimensions to use if the input is a matrix of cells X
reduced dimensions. If this is provided, transposed should also be set=TRUE.}

\item{reduced_dim}{Dimensional reduction used for Milo. Default is "PCA"}

\item{refined}{A logical scalar that determines the sampling behavior used
by Milo. Default=TRUE implements a refined sampling scheme, specified by the
refinement_scheme argument.}

\item{prop}{Milo: A double scalar that defines what proportion of graph
vertices to randomly sample. Must be 0 < prop < 1. Default is 0.2.}

\item{plot_dimred}{Dimensional reduction used for plot. Default is "UMAP"}

\item{plot_text}{size of plot text. Default is 3.}

\item{plot_point}{size for points in plot. Default is 0.5}

\item{plot_alpha}{Milo: significance level for Spatial FDR (default: 0.1)}

\item{save_dir}{directory that is to be used as root to save output files.
Default is getwd()}

\item{dir_lab}{Celltype label that specifies if all cell types are
being tested (Default = "all_celltypes") or a cell lineage which is important
for structuring output in a systematic way.}

\item{height}{Height used for output plots in pdf files. Default is 5}

\item{width}{Width used for output plots in pdf files. Default is 8}

\item{beeswarm_colour}{vector of three colours that are used for beeswarm
plots. Default is c("red", "blue", "grey").}
}
\value{
good question
}
\description{
This function performs an analysis to see if there are more or less cells/ nuclei
per cluster depending on a metadata factor such as condition.
}
\examples{
milo_obj <- abundance_test(seur_obj = cns,
                      cluster_col = "rough_annot",
                      sample_id = "uniq_id",
                      cols_interest = c("uniq_id",
                                         "Tissue",
                                         "gender",
                                         "AgeGroup",
                                         "caseNO"),
                      test_factors = c("Tissue", "gender", "AgeGroup"),
                      save_dir = getwd()

}
