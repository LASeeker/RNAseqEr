% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_cond_markers.R
\name{find_cond_markers}
\alias{find_cond_markers}
\title{Find condition markers}
\usage{
find_cond_markers(
  seur_obj,
  cluster_id,
  int_cols,
  dir_lab = "all_celltypes",
  only_pos = TRUE,
  min_pct = 0.25,
  logfc_threshold = 0.25,
  fil_pct_1 = 0.25,
  fil_pct_2 = 0.6,
  save_dir = getwd(),
  test_use = "MAST"
)
}
\arguments{
\item{seur_obj}{Seurat object that has been quality controlled and clustered.}

\item{cluster_id}{metadata column that contains cluster information used.}

\item{int_cols}{list of metadata columns that contain all conditions of interest
(such as disease/control, treatment/control, young/old, tissue regions,...).
If condition of interest is a factor with more than 2 levels, pairwise
comparisons are implemented.}

\item{dir_lab}{label to organise output into cell linages.
Default is "all_celltypes".}

\item{only_pos}{whether only positive log-fold changes should be considered,
default is TRUE.}

\item{min_pct}{minimum proportion within cluster of interest expressing the gene.}

\item{logfc_threshold}{threshold for log2 fold changes}

\item{fil_pct_1}{filtering threshold for the minimum proportion of cells within
the cluster of interest expressing the gene.}

\item{fil_pct_2}{filtering threshold for the maximum proportion of cells outside
the cluster of interest expressing the gene.}

\item{save_dir}{path to folder where output files should be saved, default is
current working directory}

\item{test_use}{statistical approach being used for differential gene expression
analysis. Default is MAST.}
}
\value{
saves lists of differentially expressed genes between conditions to
folders
}
\description{
By using differential gene expression analysis over the entire dataset and
within clusters, markers for all conditions of interest (disease/control,
treatment/control, young/old, tissue regions,...) are identified and saved.
}
\examples{
library(Seurat)
cns <- seurat_proc(cns, tsne = FALSE)
find_cond_markers(cns,
                  int_cols = c("AgeGroup","Tissue"),
                  cluster_id = "rough_annot")
}
